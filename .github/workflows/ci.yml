# .github/workflows/ci.yml
name: CI Pipeline # Name of the workflow

on: # Events that trigger this workflow
  push:
    branches: [ "main" ] # Run on pushes to the main branch
  pull_request:
    branches: [ "main" ] # Run on pull requests targeting the main branch

jobs: # Workflows run one or more jobs
  build_and_test: # Name of the job
    runs-on: ubuntu-latest # Specify the runner environment

    steps: # Sequence of tasks called steps
      - name: Checkout code # Step to check out your repository's code
        uses: actions/checkout@v4 # Use a pre-built action

      - name: Set up Docker Buildx # Step to set up Docker build capabilities
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image # Step to build the image
        run: docker build -t my-flask-app:${{ github.sha }} . 
        # Tagging with the commit SHA makes it unique

      # --- Basic Test Example ---
      # In a real project, you'd run unit/integration tests here
      # For now, we'll just check if the container starts
      - name: Run container for a basic check
        run: |
          docker run -d --rm -p 5000:5000 --name test-app my-flask-app:${{ github.sha }}
          sleep 5 # Give the server a moment to start
          curl -f http://localhost:5000 || exit 1 # Check if the root URL responds successfully
          docker stop test-app
        # Note: This is a very basic "test". Pytest would be better.